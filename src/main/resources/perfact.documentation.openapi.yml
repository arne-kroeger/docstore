openapi: 3.0.1
info:
  title: perf::act Documentation API
  contact:
    email: documentation@perf-act.com
  version: 1.0.0
servers:
- url: https://documentation.perf-act.de/api/
paths:
  /document:
    get:
      tags:
      - document
      summary: get latest updated documents
      operationId: getLatestDocuments
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents'
        400:
          description: bad request, see response data for details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        403:
          description: operation not allowed for the user
          content: {}
    post:
      tags:
      - document
      summary: adds a new document
      operationId: addNewDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true          
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        400:
          description: bad request, see response data for details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        403:
          description: operation not allowed for the user
          content: {}
  /document/search:
    post:
      tags:
      - document
      summary: search for documents
      operationId: searchDocuments
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true          
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents'
        400:
          description: bad request, see response data for details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        403:
          description: operation not allowed for the user
          content: {}
  /document/{uuid}/{env}:
    get:
      tags:
      - document
      summary: get latest updated documents
      operationId: getDocument
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      - in: path
        name: env
        schema:
          type: string
        required: true
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        400:
          description: bad request, see response data for details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        403:
          description: operation not allowed for the user
          content: {}
  /document/template/{templateUuid}:
    post:
      tags:
      - document
      summary: adds a new document by template
      operationId: addNewDocumentForTemplate
      parameters:
      - in: path
        name: templateUuid
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateData'
        required: true          
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        400:
          description: bad request, see response data for details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        403:
          description: operation not allowed for the user
          content: {}
components:
  schemas:
    Documents:
      type: array
      items:
        $ref: "#/components/schemas/Document"
    Document:
      type: object
      required:
        - uuid
        - title
        - content
        - space
        - environment
        - otherEnvironments
        - tags
        - latestUpdate
      properties:
        id:
          type: integer
          format: int64
        uuid: 
          type: string
        title: 
          type: string
        content: 
          type: string
        latestChange:
          type: string
          format: date-time
        latestUpdate:
          type: string
          format: date-time
        space:
          $ref: '#/components/schemas/Space'
        environment:
          $ref: '#/components/schemas/Environment'
        otherEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
        tags:
          $ref: '#/components/schemas/Tags'
    Tags:
      type: array
      items:
        type: string
    Environment:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    Space:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    TemplateData:
      type: object
      required:
        - uuid
        - space
        - variables
      properties:
        uuid: 
          type: string
        space:
          $ref: '#/components/schemas/Space'
        environment:
          $ref: '#/components/schemas/Environment'
        additionalTags:
          $ref: '#/components/schemas/Tags'
        variables:
          $ref: '#/components/schemas/TemplateVariables'
    TemplateVariables:
      type: array
      items: 
        $ref: '#/components/schemas/TemplateVariable'
    TemplateVariable:
      type: object
      properties:
        name: 
          type: string
        value:
          type: object
    BadRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
      description: cloned from product list api
    ErrorItem:
      type: object
      properties:
        field:
          type: string
        code:
          type: string
        message:
          type: string
      description: definition of error item
  responses:
    BadRequest:
      description: bad request, see response data for details
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    NotAllowed:
      description: operation not allowed for the user
      content: {}